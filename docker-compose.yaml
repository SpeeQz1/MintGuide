services:
  mediawiki:
    container_name: wiki
    image: mediawiki:1.44
    restart: always
    ports:
      - "80:80"
    depends_on:
      - database
    env_file:
      - .env
    volumes:
      - images:/var/www/html/images
      # Important to note is that only the assets folder has been modified and not resources.
      # Otherwise it will mimic what is on the host including missing files.
      - ./resources/assets:/var/www/html/resources/assets
      # Import default and custom skins
      - ./skins:/var/www/html/skins
      # Import extensions, the ones present in the default installation are included
      - ./extensions:/var/www/html/extensions
      # Local exports and imports
      - ./content:/var/www/html/content
      # Import wikitext files
      - ./wikitext_files:/var/www/html/wikitext_files
      # Inject custom LocalSettings.php file
      - ./LocalSettings.php.template:/var/www/html/LocalSettings.php.template
      # Add maintanence scripts
      - ./scripts/setup.sh:/setup.sh
      - ./scripts/update-config.sh:/update-config.sh
      - ./scripts/export-wiki.sh:/export-wiki.sh
      - ./scripts/import-wiki.sh:/import-wiki.sh
      # Inject custom CSS for Citizen
      - ./css:/var/www/html/css
      # Add h5ai for media exports
      - ./_h5ai:/var/www/html/_h5ai
      - ./scripts/setup-h5ai.sh:/setup-h5ai.sh
    environment:
      - MEDIAWIKI_DB_HOST=${MEDIAWIKI_DB_HOST}
      - MEDIAWIKI_DB_NAME=${MEDIAWIKI_DB_NAME}
      - MEDIAWIKI_DB_USER=${MEDIAWIKI_DB_USER}
      - MEDIAWIKI_DB_PASSWORD=${MEDIAWIKI_DB_PASSWORD}
      - MEDIAWIKI_SITENAME=${MEDIAWIKI_SITENAME}
      - MEDIAWIKI_META_NAMESPACE=${MEDIAWIKI_META_NAMESPACE}
      - MEDIAWIKI_SERVER=${MEDIAWIKI_SERVER}
      - MEDIAWIKI_SECRET_KEY=${MEDIAWIKI_SECRET_KEY}
      - MEDIAWIKI_UPGRADE_KEY=${MEDIAWIKI_UPGRADE_KEY}
      - MEDIAWIKI_AUTH_TOKEN_VERSION=${MEDIAWIKI_AUTH_TOKEN_VERSION}
      - MEDIAWIKI_ADMIN_USER=${MEDIAWIKI_ADMIN_USER}
      - MEDIAWIKI_ADMIN_PASS=${MEDIAWIKI_ADMIN_PASS}
    entrypoint:
      [
        "/bin/bash",
        "-c",
        "apt-get update && apt-get install -y default-mysql-client && /setup-h5ai.sh && /setup.sh",
      ]

  database:
    container_name: db
    image: mysql:8.0
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${MEDIAWIKI_DB_NAME}
      MYSQL_USER: ${MEDIAWIKI_DB_USER}
      MYSQL_PASSWORD: ${MEDIAWIKI_DB_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    volumes:
      - dbvolume:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

  # GitOps with doco-cd (optional - can be disabled)
  doco-cd:
    container_name: doco-cd
    image: ghcr.io/kimdre/doco-cd:latest
    restart: unless-stopped
    profiles:
      - gitops
    ports:
      - "8080:80"
    environment:
      TZ: UTC
      DOCOCD_LOG_LEVEL: info
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}
      GIT_ACCESS_TOKEN: ${GIT_ACCESS_TOKEN}
      GITHUB_REPO_URL: ${GITHUB_REPO_URL} # Add this line
      POLL_CONFIG: |
        - url: ${GITHUB_REPO_URL}
          reference: ${GITHUB_BRANCH:-main}
          interval: 15
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/workspace:ro
      - data:/data
      - ./scripts/inject-gitops.sh:/inject-gitops.sh:ro
    entrypoint:
      [
        "/bin/sh",
        "-c",
        "while true; do sleep 15; /inject-env.sh; done & exec /app/doco-cd",
      ]

volumes:
  dbvolume:
    name: dbvolume
  images: {}
  data: {}
